// Execute Tasks in SubModule: gradle MODUL:clean build
plugins {
    id "de.freese.gradle.conventions" version "$version_myConventionPlugin" apply false
    id "io.spring.dependency-management" version "$version_springDependencyManagement" apply false
    id "org.openjfx.javafxplugin" version "$version_javafxPlugin" apply false
    id "org.springframework.boot" version "$version_springBoot" apply false

    id "name.remal.sonarlint" version "$version_nameRemalSonarlintPlugin" apply false
    id "de.freese.gradle.sonarlint-conventions" version "$version_myConventionPlugin" apply false
}

subprojects {
    apply plugin: "base"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "de.freese.gradle.conventions"
    apply plugin: "name.remal.sonarlint"
    apply plugin: "de.freese.gradle.sonarlint-conventions"

    configurations.configureEach {
        exclude group: "ch.qos.logback", module: "logback-classic"
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:$version_springBoot")
        }

        dependencies {
            dependencySet(group: "org.apache.xmlgraphics", version: "$version_batik") {
                entry "batik-codec"
                entry "batik-swing"
                entry "batik-transcoder"
            }

            dependency("org.jfree:jfreechart:$version_jfreechart")
        }
    }

    pluginManager.withPlugin("java") {
        dependencies {
            testImplementation("org.junit.jupiter:junit-jupiter")
            
            testRuntimeOnly("org.junit.platform:junit-platform-launcher")
        }
    }
}

// For Composite Build.
tasks.register("cleanAll", GradleBuild) {
    tasks = ["clean"]
}
tasks.register("buildAll", GradleBuild) {
    tasks = ["build"]
}
