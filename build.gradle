// Execute Tasks in SubModule: gradle MODUL:clean build
plugins {
    id "de.freese.gradle.plugin.conventions" version "$version_myConventionPlugin" apply false
    id "io.spring.dependency-management" version "$version_springDependencyManagement" apply false
    id "org.openjfx.javafxplugin" version "$version_javafxPlugin" apply false
    id "org.springframework.boot" version "$version_springBoot" apply false
}

subprojects {
    apply plugin: "base"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "de.freese.gradle.plugin.conventions"

    configurations.configureEach {
        exclude group: "ch.qos.logback", module: "logback-classic"
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:$version_springBoot")
        }

        dependencies {
            // Empty
        }
    }

    afterEvaluate { project ->
        if (project.plugins.hasPlugin("java") || project.plugins.hasPlugin("java-library") || project.plugins.hasPlugin("application")) {
            dependencies {
                testImplementation("org.junit.jupiter:junit-jupiter")
                testRuntimeOnly("org.junit.platform:junit-platform-launcher")
            }
        }
    }
}

project("core") {
    apply plugin: "application"
    apply plugin: "java-library"
    description "Base-Projekt for Media-Access"
    dependencies {
        api("org.springframework.boot:spring-boot-starter-jdbc") {
//            exclude group: "ch.qos.logback", module: "logback-classic"
        }
        api("org.xerial:sqlite-jdbc")

        runtimeOnly("org.slf4j:jcl-over-slf4j")
        runtimeOnly("org.slf4j:slf4j-simple")
        runtimeOnly("org.mariadb.jdbc:mariadb-java-client")
    }
    // Start: gradle run
    application {
        mainClass = "de.freese.mediathek.report.MultimediaReporter"
    }
    jar {
        manifest {
            attributes(
                    "Main-Class": "de.freese.mediathek.report.MultimediaReporter"
            )
        }
    }
}

project("services") {
    apply plugin: "java-library"
    description "API for Online-Media-Databases(www.themoviedb.org, www.thetvdb.com)"
    dependencies {
        api(project(":core"))
        api("com.fasterxml.jackson.dataformat:jackson-dataformat-xml")
        api("jakarta.xml.bind:jakarta.xml.bind-api")
        api("org.springframework:spring-web")
    }
}

project("kodi:kodi-core") {
    apply plugin: "java-library"
    apply plugin: "org.springframework.boot"
    description "API for KODI"
    dependencies {
        api(project(":core"))

        testImplementation("org.hsqldb:hsqldb")
    }
    // Start: gradle bootRun --args="--spring.profiles.active=dev"
    // The archive name. If the name has not been explicitly set, the pattern for the name is:
    // [archiveBaseName]-[archiveAppendix]-[archiveVersion]-[archiveClassifier].[archiveExtension]
    // archiveFileName = "my-boot.jar"
    springBoot {
        mainClass = "de.freese.mediathek.kodi.report.KodiReporter"
    }
}

project("kodi:kodi-swing") {
    apply plugin: "java"
    apply plugin: "org.springframework.boot"
    description "Swing GUI for KODI"
    dependencies {
        implementation(project(":kodi:kodi-core"))
    }
    // Start: gradle bootRun --args="--spring.profiles.active=dev"
    // The archive name. If the name has not been explicitly set, the pattern for the name is:
    // [archiveBaseName]-[archiveAppendix]-[archiveVersion]-[archiveClassifier].[archiveExtension]
    // archiveFileName = "my-boot.jar"
    springBoot {
        mainClass = "de.freese.mediathek.kodi.swing.KodiSwingClient"
    }
}

project("kodi:kodi-javafx") {
    apply plugin: "java"
    apply plugin: "org.springframework.boot"
    apply plugin: "org.openjfx.javafxplugin"
    description "JavaFX GUI for KODI"
    dependencies {
        implementation(project(":kodi:kodi-core"))

        javafx {
            version = "$version_javafx"
            modules = ["javafx.controls", "javafx.fxml"]
        }
    }
    // Start: gradle bootRun --args="--spring.profiles.active=dev"
    // The archive name. If the name has not been explicitly set, the pattern for the name is:
    // [archiveBaseName]-[archiveAppendix]-[archiveVersion]-[archiveClassifier].[archiveExtension]
    // archiveFileName = "my-boot.jar"
    springBoot {
        mainClass = "de.freese.mediathek.kodi.javafx.KodiJavaFxClientLauncher"
    }
}
